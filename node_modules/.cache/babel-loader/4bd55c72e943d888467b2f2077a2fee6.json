{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Particles = void 0;\n\nvar Links_1 = require(\"./Links/Links\");\n\nvar Move_1 = require(\"./Move\");\n\nvar ParticlesNumber_1 = require(\"./ParticlesNumber\");\n\nvar Opacity_1 = require(\"./Opacity/Opacity\");\n\nvar Shape_1 = require(\"./Shape/Shape\");\n\nvar Size_1 = require(\"./Size/Size\");\n\nvar Rotate_1 = require(\"./Rotate/Rotate\");\n\nvar Shadow_1 = require(\"./Shadow\");\n\nvar Stroke_1 = require(\"./Stroke\");\n\nvar Collisions_1 = require(\"./Collisions\");\n\nvar Twinkle_1 = require(\"./Twinkle/Twinkle\");\n\nvar AnimatableColor_1 = require(\"./AnimatableColor\");\n\nvar Particles = function () {\n  function Particles() {\n    this.collisions = new Collisions_1.Collisions();\n    this.color = new AnimatableColor_1.AnimatableColor();\n    this.links = new Links_1.Links();\n    this.move = new Move_1.Move();\n    this.number = new ParticlesNumber_1.ParticlesNumber();\n    this.opacity = new Opacity_1.Opacity();\n    this.rotate = new Rotate_1.Rotate();\n    this.shadow = new Shadow_1.Shadow();\n    this.shape = new Shape_1.Shape();\n    this.size = new Size_1.Size();\n    this.stroke = new Stroke_1.Stroke();\n    this.twinkle = new Twinkle_1.Twinkle();\n  }\n\n  Object.defineProperty(Particles.prototype, \"line_linked\", {\n    get: function () {\n      return this.links;\n    },\n    set: function (value) {\n      this.links = value;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Particles.prototype, \"lineLinked\", {\n    get: function () {\n      return this.links;\n    },\n    set: function (value) {\n      this.links = value;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  Particles.prototype.load = function (data) {\n    var _a, _b, _c, _d, _e, _f, _g;\n\n    if (data !== undefined) {\n      if (data.color !== undefined) {\n        this.color = AnimatableColor_1.AnimatableColor.create(this.color, data.color);\n      }\n\n      var links = (_b = (_a = data.links) !== null && _a !== void 0 ? _a : data.lineLinked) !== null && _b !== void 0 ? _b : data.line_linked;\n\n      if (links !== undefined) {\n        this.links.load(links);\n      }\n\n      this.move.load(data.move);\n      this.number.load(data.number);\n      this.opacity.load(data.opacity);\n      this.rotate.load(data.rotate);\n      this.shape.load(data.shape);\n      this.size.load(data.size);\n      this.shadow.load(data.shadow);\n      this.twinkle.load(data.twinkle);\n      var collisions = (_d = (_c = data.move) === null || _c === void 0 ? void 0 : _c.collisions) !== null && _d !== void 0 ? _d : (_e = data.move) === null || _e === void 0 ? void 0 : _e.bounce;\n\n      if (collisions !== undefined) {\n        this.collisions.enable = collisions;\n      }\n\n      this.collisions.load(data.collisions);\n      var strokeToLoad = (_f = data.stroke) !== null && _f !== void 0 ? _f : (_g = data.shape) === null || _g === void 0 ? void 0 : _g.stroke;\n\n      if (strokeToLoad !== undefined) {\n        if (strokeToLoad instanceof Array) {\n          this.stroke = strokeToLoad.map(function (s) {\n            var tmp = new Stroke_1.Stroke();\n            tmp.load(s);\n            return tmp;\n          });\n        } else {\n          if (this.stroke instanceof Array) {\n            this.stroke = new Stroke_1.Stroke();\n          }\n\n          this.stroke.load(strokeToLoad);\n        }\n      }\n    }\n  };\n\n  return Particles;\n}();\n\nexports.Particles = Particles;","map":null,"metadata":{},"sourceType":"script"}