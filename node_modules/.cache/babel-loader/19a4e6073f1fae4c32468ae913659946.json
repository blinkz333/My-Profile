{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __classPrivateFieldSet = this && this.__classPrivateFieldSet || function (receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\n\nvar __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\n\nvar _Main_initialized;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Main = void 0;\n\nconst Utils_1 = require(\"./Utils\");\n\nconst Loader_1 = require(\"./Core/Loader\");\n\nclass Main {\n  constructor() {\n    _Main_initialized.set(this, void 0);\n\n    __classPrivateFieldSet(this, _Main_initialized, false, \"f\");\n  }\n\n  init() {\n    if (!__classPrivateFieldGet(this, _Main_initialized, \"f\")) {\n      __classPrivateFieldSet(this, _Main_initialized, true, \"f\");\n    }\n  }\n\n  loadFromArray(tagId, options, index) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return Loader_1.Loader.load(tagId, options, index);\n    });\n  }\n\n  load(tagId, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return Loader_1.Loader.load(tagId, options);\n    });\n  }\n\n  set(id, element, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return Loader_1.Loader.set(id, element, options);\n    });\n  }\n\n  loadJSON(tagId, pathConfigJson, index) {\n    return Loader_1.Loader.loadJSON(tagId, pathConfigJson, index);\n  }\n\n  setJSON(id, element, pathConfigJson, index) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return Loader_1.Loader.setJSON(id, element, pathConfigJson, index);\n    });\n  }\n\n  setOnClickHandler(callback) {\n    Loader_1.Loader.setOnClickHandler(callback);\n  }\n\n  dom() {\n    return Loader_1.Loader.dom();\n  }\n\n  domItem(index) {\n    return Loader_1.Loader.domItem(index);\n  }\n\n  addShape(shape, drawer, init, afterEffect, destroy) {\n    let customDrawer;\n\n    if (typeof drawer === \"function\") {\n      customDrawer = {\n        afterEffect: afterEffect,\n        destroy: destroy,\n        draw: drawer,\n        init: init\n      };\n    } else {\n      customDrawer = drawer;\n    }\n\n    Utils_1.Plugins.addShapeDrawer(shape, customDrawer);\n  }\n\n  addPreset(preset, options, override = false) {\n    Utils_1.Plugins.addPreset(preset, options, override);\n  }\n\n  addPlugin(plugin) {\n    Utils_1.Plugins.addPlugin(plugin);\n  }\n\n  addPathGenerator(name, generator) {\n    Utils_1.Plugins.addPathGenerator(name, generator);\n  }\n\n  addInteractor(name, interactorInitializer) {\n    Utils_1.Plugins.addInteractor(name, interactorInitializer);\n  }\n\n  addParticleUpdater(name, updaterInitializer) {\n    Utils_1.Plugins.addParticleUpdater(name, updaterInitializer);\n  }\n\n}\n\nexports.Main = Main;\n_Main_initialized = new WeakMap();","map":null,"metadata":{},"sourceType":"script"}