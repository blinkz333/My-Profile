{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Circle = void 0;\n\nconst Range_1 = require(\"./Range\");\n\nclass Circle extends Range_1.Range {\n  constructor(x, y, radius) {\n    super(x, y);\n    this.radius = radius;\n  }\n\n  contains(point) {\n    const d = Math.pow(point.x - this.position.x, 2) + Math.pow(point.y - this.position.y, 2);\n    return d <= this.radius * this.radius;\n  }\n\n  intersects(range) {\n    const rect = range;\n    const circle = range;\n    const pos1 = this.position;\n    const pos2 = range.position;\n    const xDist = Math.abs(pos2.x - pos1.x);\n    const yDist = Math.abs(pos2.y - pos1.y);\n    const r = this.radius;\n\n    if (circle.radius !== undefined) {\n      const rSum = r + circle.radius;\n      const dist = Math.sqrt(xDist * xDist + yDist + yDist);\n      return rSum > dist;\n    } else if (rect.size !== undefined) {\n      const w = rect.size.width;\n      const h = rect.size.height;\n      const edges = Math.pow(xDist - w, 2) + Math.pow(yDist - h, 2);\n\n      if (xDist > r + w || yDist > r + h) {\n        return false;\n      }\n\n      if (xDist <= w || yDist <= h) {\n        return true;\n      }\n\n      return edges <= r * r;\n    }\n\n    return false;\n  }\n\n}\n\nexports.Circle = Circle;","map":null,"metadata":{},"sourceType":"script"}