{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Retina = void 0;\n\nvar Retina = function () {\n  function Retina(container) {\n    this.container = container;\n    this.bubbleModeDistance = 0;\n    this.bubbleModeSize = 0;\n    this.connectModeDistance = 0;\n    this.connectModeRadius = 0;\n    this.grabModeDistance = 0;\n    this.repulseModeDistance = 0;\n    this.slowModeRadius = 0;\n    this.linksDistance = 0;\n    this.linksWidth = 0;\n    this.moveSpeed = 0;\n    this.sizeValue = 0;\n    this.sizeAnimationSpeed = 0;\n    this.pixelRatio = 1;\n  }\n\n  Retina.prototype.init = function () {\n    var _a;\n\n    var container = this.container;\n    var options = container.options;\n\n    if (options.detectRetina) {\n      this.pixelRatio = window.devicePixelRatio;\n    } else {\n      this.pixelRatio = 1;\n    }\n\n    var ratio = this.pixelRatio;\n\n    if (container.canvas.element) {\n      var element = container.canvas.element;\n      container.canvas.size.width = element.offsetWidth * ratio;\n      container.canvas.size.height = element.offsetHeight * ratio;\n    }\n\n    var particles = options.particles;\n    this.linksDistance = particles.links.distance * ratio;\n    this.linksWidth = particles.links.width * ratio;\n    this.moveSpeed = particles.move.speed * ratio;\n    this.sizeValue = particles.size.value * ratio;\n    this.sizeAnimationSpeed = particles.size.animation.speed * ratio;\n    var modes = options.interactivity.modes;\n    this.connectModeDistance = modes.connect.distance * ratio;\n    this.connectModeRadius = modes.connect.radius * ratio;\n    this.grabModeDistance = modes.grab.distance * ratio;\n    this.repulseModeDistance = modes.repulse.distance * ratio;\n    this.slowModeRadius = modes.slow.radius * ratio;\n    this.bubbleModeDistance = modes.bubble.distance * ratio;\n    this.bubbleModeSize = ((_a = modes.bubble.size) !== null && _a !== void 0 ? _a : this.sizeValue * 2) * ratio;\n  };\n\n  Retina.prototype.initParticle = function (particle) {\n    var particlesOptions = particle.particlesOptions;\n    var ratio = this.pixelRatio;\n    particle.linksDistance = particlesOptions.links.distance * ratio;\n    particle.linksWidth = particlesOptions.links.width * ratio;\n    particle.moveSpeed = particlesOptions.move.speed * ratio;\n    particle.sizeValue = particlesOptions.size.value * ratio;\n\n    if (typeof particlesOptions.size.random !== \"boolean\") {\n      particle.randomMinimumSize = particlesOptions.size.random.minimumValue * ratio;\n    }\n\n    particle.sizeAnimationSpeed = particlesOptions.size.animation.speed * ratio;\n  };\n\n  Retina.prototype.reset = function () {};\n\n  return Retina;\n}();\n\nexports.Retina = Retina;","map":null,"metadata":{},"sourceType":"script"}