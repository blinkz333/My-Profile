{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Infecter = void 0;\n\nvar Utils_1 = require(\"../../../../Utils\");\n\nvar Infecter = function () {\n  function Infecter() {}\n\n  Infecter.infect = function (p1, container, delta) {\n    var _a, _b;\n\n    p1.updateInfection(delta);\n\n    if (p1.infectionStage === undefined) {\n      return;\n    }\n\n    var options = container.options;\n    var infectionOptions = options.infection;\n\n    if (!infectionOptions.enable || infectionOptions.stages.length < 1) {\n      return;\n    }\n\n    var infectionStage1 = infectionOptions.stages[p1.infectionStage];\n    var pxRatio = container.retina.pixelRatio;\n    var radius = p1.size.value * 2 + infectionStage1.radius * pxRatio;\n    var pos = p1.getPosition();\n    var infectedStage1 = (_a = infectionStage1.infectedStage) !== null && _a !== void 0 ? _a : p1.infectionStage;\n    var query = container.particles.quadTree.query(new Utils_1.Circle(pos.x, pos.y, radius)).filter(function (t) {\n      return t.infectionStage === undefined || t.infectionStage !== p1.infectionStage;\n    });\n    var infections = infectionStage1.rate;\n    var neighbors = query.length;\n\n    for (var _i = 0, query_1 = query; _i < query_1.length; _i++) {\n      var p2 = query_1[_i];\n\n      if (Math.random() < infections / neighbors) {\n        if (p2.infectionStage === undefined) {\n          p2.startInfection(infectedStage1);\n        } else if (p2.infectionStage < p1.infectionStage) {\n          p2.updateInfectionStage(infectedStage1);\n        } else if (p2.infectionStage > p1.infectionStage) {\n          var infectionStage2 = infectionOptions.stages[p2.infectionStage];\n          var infectedStage2 = (_b = infectionStage2 === null || infectionStage2 === void 0 ? void 0 : infectionStage2.infectedStage) !== null && _b !== void 0 ? _b : p2.infectionStage;\n          p1.updateInfectionStage(infectedStage2);\n        }\n      }\n    }\n  };\n\n  return Infecter;\n}();\n\nexports.Infecter = Infecter;","map":null,"metadata":{},"sourceType":"script"}