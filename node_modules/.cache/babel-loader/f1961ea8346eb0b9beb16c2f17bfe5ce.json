{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Loader = void 0;\n\nvar Container_1 = require(\"./Container\");\n\nvar Utils_1 = require(\"../Utils\");\n\nvar tsParticlesDom = [];\n\nvar Loader = function () {\n  function Loader() {}\n\n  Loader.dom = function () {\n    return tsParticlesDom;\n  };\n\n  Loader.domItem = function (index) {\n    var dom = Loader.dom();\n    var item = dom[index];\n\n    if (item && !item.destroyed) {\n      return item;\n    }\n\n    dom.splice(index, 1);\n  };\n\n  Loader.loadFromArray = function (tagId, params, index) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2, Loader.load(tagId, Utils_1.Utils.itemFromArray(params, index))];\n      });\n    });\n  };\n\n  Loader.setFromArray = function (id, domContainer, params, index) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2, Loader.set(id, domContainer, Utils_1.Utils.itemFromArray(params, index))];\n      });\n    });\n  };\n\n  Loader.load = function (tagId, params) {\n    return __awaiter(this, void 0, void 0, function () {\n      var domContainer;\n      return __generator(this, function (_a) {\n        domContainer = document.getElementById(tagId);\n\n        if (!domContainer) {\n          return [2];\n        }\n\n        return [2, this.set(tagId, domContainer, params)];\n      });\n    });\n  };\n\n  Loader.set = function (id, domContainer, params) {\n    return __awaiter(this, void 0, void 0, function () {\n      var dom, oldIndex, old, canvasEl, generatedCanvas, existingCanvases, newItem;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            dom = Loader.dom();\n            oldIndex = dom.findIndex(function (v) {\n              return v.id === id;\n            });\n\n            if (oldIndex >= 0) {\n              old = this.domItem(oldIndex);\n\n              if (old && !old.destroyed) {\n                old.destroy();\n                dom.splice(oldIndex, 1);\n              }\n            }\n\n            if (domContainer.tagName === \"canvas\") {\n              canvasEl = domContainer;\n              generatedCanvas = false;\n            } else {\n              existingCanvases = domContainer.getElementsByTagName(\"canvas\");\n\n              if (existingCanvases.length) {\n                canvasEl = existingCanvases[0];\n\n                if (!canvasEl.className) {\n                  canvasEl.className = Utils_1.Constants.canvasClass;\n                }\n\n                generatedCanvas = false;\n              } else {\n                generatedCanvas = true;\n                canvasEl = document.createElement(\"canvas\");\n                canvasEl.className = Utils_1.Constants.canvasClass;\n                canvasEl.style.width = \"100%\";\n                canvasEl.style.height = \"100%\";\n                domContainer.appendChild(canvasEl);\n              }\n            }\n\n            newItem = new Container_1.Container(id, params);\n\n            if (oldIndex >= 0) {\n              dom.splice(oldIndex, 0, newItem);\n            } else {\n              dom.push(newItem);\n            }\n\n            newItem.canvas.loadCanvas(canvasEl, generatedCanvas);\n            return [4, newItem.start()];\n\n          case 1:\n            _a.sent();\n\n            return [2, newItem];\n        }\n      });\n    });\n  };\n\n  Loader.loadJSON = function (tagId, jsonUrl) {\n    return __awaiter(this, void 0, void 0, function () {\n      var response, params;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4, fetch(jsonUrl)];\n\n          case 1:\n            response = _a.sent();\n            if (!response.ok) return [3, 3];\n            return [4, response.json()];\n\n          case 2:\n            params = _a.sent();\n\n            if (params instanceof Array) {\n              return [2, Loader.loadFromArray(tagId, params)];\n            } else {\n              return [2, Loader.load(tagId, params)];\n            }\n\n            return [3, 4];\n\n          case 3:\n            console.error(\"Error tsParticles - fetch status: \" + response.status);\n            console.error(\"Error tsParticles - File config not found\");\n            _a.label = 4;\n\n          case 4:\n            return [2];\n        }\n      });\n    });\n  };\n\n  Loader.setJSON = function (id, domContainer, jsonUrl) {\n    return __awaiter(this, void 0, void 0, function () {\n      var response, params;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4, fetch(jsonUrl)];\n\n          case 1:\n            response = _a.sent();\n            if (!response.ok) return [3, 3];\n            return [4, response.json()];\n\n          case 2:\n            params = _a.sent();\n\n            if (params instanceof Array) {\n              return [2, Loader.setFromArray(id, domContainer, params)];\n            } else {\n              return [2, Loader.set(id, domContainer, params)];\n            }\n\n            return [3, 4];\n\n          case 3:\n            console.error(\"Error tsParticles - fetch status: \" + response.status);\n            console.error(\"Error tsParticles - File config not found\");\n            _a.label = 4;\n\n          case 4:\n            return [2];\n        }\n      });\n    });\n  };\n\n  Loader.setOnClickHandler = function (callback) {\n    var dom = Loader.dom();\n\n    if (dom.length === 0) {\n      throw new Error(\"Can only set click handlers after calling tsParticles.load() or tsParticles.loadJSON()\");\n    }\n\n    for (var _i = 0, dom_1 = dom; _i < dom_1.length; _i++) {\n      var domItem = dom_1[_i];\n      var el = domItem.interactivity.element;\n\n      if (el) {\n        el.addEventListener(\"click\", callback);\n      }\n    }\n  };\n\n  return Loader;\n}();\n\nexports.Loader = Loader;","map":null,"metadata":{},"sourceType":"script"}