{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Plugins = void 0;\n\nvar Plugins = function () {\n  function Plugins() {}\n\n  Plugins.getPlugin = function (plugin) {\n    return this.plugins.filter(function (t) {\n      return t.id === plugin;\n    })[0];\n  };\n\n  Plugins.addPlugin = function (plugin) {\n    if (!this.getPlugin(plugin.id)) {\n      this.plugins.push(plugin);\n    }\n  };\n\n  Plugins.getAvailablePlugins = function (container) {\n    var res = {};\n    var availablePlugins = this.plugins.filter(function (t) {\n      return t.needsPlugin(container.sourceOptions);\n    });\n\n    for (var _i = 0, availablePlugins_1 = availablePlugins; _i < availablePlugins_1.length; _i++) {\n      var plugin = availablePlugins_1[_i];\n      res[plugin.id] = plugin.getPlugin(container);\n    }\n\n    return res;\n  };\n\n  Plugins.loadOptions = function (options, sourceOptions) {\n    for (var _i = 0, _a = this.plugins; _i < _a.length; _i++) {\n      var plugin = _a[_i];\n      plugin.loadOptions(options, sourceOptions);\n    }\n  };\n\n  Plugins.getPreset = function (preset) {\n    return this.presets[preset];\n  };\n\n  Plugins.addPreset = function (presetKey, options) {\n    if (!this.getPreset(presetKey)) {\n      this.presets[presetKey] = options;\n    }\n  };\n\n  Plugins.addShapeDrawer = function (type, drawer) {\n    if (!this.drawers[type]) {\n      this.drawers[type] = drawer;\n    }\n  };\n\n  Plugins.getShapeDrawer = function (type) {\n    return this.drawers[type];\n  };\n\n  Plugins.getSupportedShapes = function () {\n    return Object.keys(this.drawers);\n  };\n\n  Plugins.plugins = [];\n  Plugins.presets = {};\n  Plugins.drawers = {};\n  return Plugins;\n}();\n\nexports.Plugins = Plugins;","map":null,"metadata":{},"sourceType":"script"}