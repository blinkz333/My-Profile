{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Connector = void 0;\n\nvar Utils_1 = require(\"../../../../Utils\");\n\nvar Connector = function () {\n  function Connector() {}\n\n  Connector.connect = function (container, _delta) {\n    var options = container.options;\n\n    if (options.interactivity.events.onHover.enable && container.interactivity.status === \"mousemove\") {\n      var mousePos = container.interactivity.mouse.position;\n\n      if (!mousePos) {\n        return;\n      }\n\n      var distance = Math.abs(container.retina.connectModeRadius);\n      var query = container.particles.quadTree.query(new Utils_1.Circle(mousePos.x, mousePos.y, distance));\n      var i = 0;\n\n      for (var _i = 0, query_1 = query; _i < query_1.length; _i++) {\n        var p1 = query_1[_i];\n        var pos1 = p1.getPosition();\n\n        for (var _a = 0, _b = query.slice(i + 1); _a < _b.length; _a++) {\n          var p2 = _b[_a];\n          var pos2 = p2.getPosition();\n          var distMax = Math.abs(container.retina.connectModeDistance);\n          var xDiff = Math.abs(pos1.x - pos2.x);\n          var yDiff = Math.abs(pos1.y - pos2.y);\n\n          if (xDiff < distMax && yDiff < distMax) {\n            container.canvas.drawConnectLine(p1, p2);\n          }\n        }\n\n        ++i;\n      }\n    }\n  };\n\n  return Connector;\n}();\n\nexports.Connector = Connector;","map":null,"metadata":{},"sourceType":"script"}