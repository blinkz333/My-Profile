{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Grabber = void 0;\n\nvar Utils_1 = require(\"../../../../Utils\");\n\nvar Grabber = function () {\n  function Grabber() {}\n\n  Grabber.grab = function (container, _delta) {\n    var _a, _b;\n\n    var options = container.options;\n    var interactivity = options.interactivity;\n\n    if (interactivity.events.onHover.enable && container.interactivity.status === Utils_1.Constants.mouseMoveEvent) {\n      var mousePos = container.interactivity.mouse.position;\n\n      if (mousePos === undefined) {\n        return;\n      }\n\n      var distance = container.retina.grabModeDistance;\n      var query = container.particles.quadTree.query(new Utils_1.Circle(mousePos.x, mousePos.y, distance));\n\n      for (var _i = 0, query_1 = query; _i < query_1.length; _i++) {\n        var particle = query_1[_i];\n        var pos = particle.getPosition();\n        var distance_1 = Utils_1.Utils.getDistance(pos, mousePos);\n\n        if (distance_1 <= container.retina.grabModeDistance) {\n          var grabLineOptions = interactivity.modes.grab.links;\n          var lineOpacity = grabLineOptions.opacity;\n          var grabDistance = container.retina.grabModeDistance;\n          var opacityLine = lineOpacity - distance_1 * lineOpacity / grabDistance;\n\n          if (opacityLine > 0) {\n            var optColor = (_a = grabLineOptions.color) !== null && _a !== void 0 ? _a : particle.particlesOptions.links.color;\n\n            if (!container.particles.grabLineColor) {\n              container.particles.grabLineColor = optColor === Utils_1.Constants.randomColorValue || ((_b = optColor) === null || _b === void 0 ? void 0 : _b.value) === Utils_1.Constants.randomColorValue ? Utils_1.Constants.randomColorValue : Utils_1.ColorUtils.colorToRgb(optColor);\n            }\n\n            var colorLine = void 0;\n\n            if (container.particles.grabLineColor === Utils_1.Constants.randomColorValue) {\n              colorLine = Utils_1.ColorUtils.getRandomRgbColor();\n            } else {\n              colorLine = container.particles.grabLineColor;\n            }\n\n            if (colorLine === undefined) {\n              return;\n            }\n\n            container.canvas.drawGrabLine(particle, colorLine, opacityLine, mousePos);\n          }\n        }\n      }\n    }\n  };\n\n  return Grabber;\n}();\n\nexports.Grabber = Grabber;","map":null,"metadata":{},"sourceType":"script"}