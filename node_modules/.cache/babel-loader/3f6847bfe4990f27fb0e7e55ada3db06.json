{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DivEvent = void 0;\n\nconst Enums_1 = require(\"../../../../Enums\");\n\nclass DivEvent {\n  constructor() {\n    this.selectors = [];\n    this.enable = false;\n    this.mode = [];\n    this.type = Enums_1.DivType.circle;\n  }\n\n  get elementId() {\n    return this.ids;\n  }\n\n  set elementId(value) {\n    this.ids = value;\n  }\n\n  get el() {\n    return this.elementId;\n  }\n\n  set el(value) {\n    this.elementId = value;\n  }\n\n  get ids() {\n    return this.selectors instanceof Array ? this.selectors.map(t => t.replace(\"#\", \"\")) : this.selectors.replace(\"#\", \"\");\n  }\n\n  set ids(value) {\n    this.selectors = value instanceof Array ? value.map(t => `#${t}`) : `#${value}`;\n  }\n\n  load(data) {\n    var _a, _b;\n\n    if (data === undefined) {\n      return;\n    }\n\n    const ids = (_b = (_a = data.ids) !== null && _a !== void 0 ? _a : data.elementId) !== null && _b !== void 0 ? _b : data.el;\n\n    if (ids !== undefined) {\n      this.ids = ids;\n    }\n\n    if (data.selectors !== undefined) {\n      this.selectors = data.selectors;\n    }\n\n    if (data.enable !== undefined) {\n      this.enable = data.enable;\n    }\n\n    if (data.mode !== undefined) {\n      this.mode = data.mode;\n    }\n\n    if (data.type !== undefined) {\n      this.type = data.type;\n    }\n  }\n\n}\n\nexports.DivEvent = DivEvent;","map":null,"metadata":{},"sourceType":"script"}