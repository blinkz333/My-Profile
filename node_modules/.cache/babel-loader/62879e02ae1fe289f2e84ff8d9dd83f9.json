{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Events = void 0;\n\nconst ClickEvent_1 = require(\"./ClickEvent\");\n\nconst DivEvent_1 = require(\"./DivEvent\");\n\nconst HoverEvent_1 = require(\"./HoverEvent\");\n\nclass Events {\n  constructor() {\n    this.onClick = new ClickEvent_1.ClickEvent();\n    this.onDiv = new DivEvent_1.DivEvent();\n    this.onHover = new HoverEvent_1.HoverEvent();\n    this.resize = true;\n  }\n\n  get onclick() {\n    return this.onClick;\n  }\n\n  set onclick(value) {\n    this.onClick = value;\n  }\n\n  get ondiv() {\n    return this.onDiv;\n  }\n\n  set ondiv(value) {\n    this.onDiv = value;\n  }\n\n  get onhover() {\n    return this.onHover;\n  }\n\n  set onhover(value) {\n    this.onHover = value;\n  }\n\n  load(data) {\n    var _a, _b, _c;\n\n    if (data === undefined) {\n      return;\n    }\n\n    this.onClick.load((_a = data.onClick) !== null && _a !== void 0 ? _a : data.onclick);\n    const onDiv = (_b = data.onDiv) !== null && _b !== void 0 ? _b : data.ondiv;\n\n    if (onDiv !== undefined) {\n      if (onDiv instanceof Array) {\n        this.onDiv = onDiv.map(div => {\n          const tmp = new DivEvent_1.DivEvent();\n          tmp.load(div);\n          return tmp;\n        });\n      } else {\n        this.onDiv = new DivEvent_1.DivEvent();\n        this.onDiv.load(onDiv);\n      }\n    }\n\n    this.onHover.load((_c = data.onHover) !== null && _c !== void 0 ? _c : data.onhover);\n\n    if (data.resize !== undefined) {\n      this.resize = data.resize;\n    }\n  }\n\n}\n\nexports.Events = Events;","map":null,"metadata":{},"sourceType":"script"}