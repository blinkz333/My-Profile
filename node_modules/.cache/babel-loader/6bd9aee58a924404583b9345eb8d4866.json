{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Emitters = void 0;\n\nvar EmitterInstance_1 = require(\"./EmitterInstance\");\n\nvar Utils_1 = require(\"../../Utils\");\n\nvar Emitter_1 = require(\"./Options/Classes/Emitter\");\n\nvar Enums_1 = require(\"./Enums\");\n\nvar Emitters = function () {\n  function Emitters(container) {\n    this.container = container;\n    this.array = [];\n    this.emitters = [];\n    this.interactivityEmitters = [];\n  }\n\n  Emitters.prototype.init = function (options) {\n    var _a, _b;\n\n    if (!options) {\n      return;\n    }\n\n    if (options.emitters) {\n      if (options.emitters instanceof Array) {\n        this.emitters = options.emitters.map(function (s) {\n          var tmp = new Emitter_1.Emitter();\n          tmp.load(s);\n          return tmp;\n        });\n      } else {\n        if (this.emitters instanceof Array) {\n          this.emitters = new Emitter_1.Emitter();\n        }\n\n        this.emitters.load(options.emitters);\n      }\n    }\n\n    var interactivityEmitters = (_b = (_a = options.interactivity) === null || _a === void 0 ? void 0 : _a.modes) === null || _b === void 0 ? void 0 : _b.emitters;\n\n    if (interactivityEmitters) {\n      if (interactivityEmitters instanceof Array) {\n        this.interactivityEmitters = interactivityEmitters.map(function (s) {\n          var tmp = new Emitter_1.Emitter();\n          tmp.load(s);\n          return tmp;\n        });\n      } else {\n        if (this.interactivityEmitters instanceof Array) {\n          this.interactivityEmitters = new Emitter_1.Emitter();\n        }\n\n        this.interactivityEmitters.load(interactivityEmitters);\n      }\n    }\n\n    if (this.emitters instanceof Array) {\n      for (var _i = 0, _c = this.emitters; _i < _c.length; _i++) {\n        var emitterOptions = _c[_i];\n        var emitter = new EmitterInstance_1.EmitterInstance(this, emitterOptions);\n        this.addEmitter(emitter);\n      }\n    } else {\n      var emitterOptions = this.emitters;\n      var emitter = new EmitterInstance_1.EmitterInstance(this, emitterOptions);\n      this.addEmitter(emitter);\n    }\n  };\n\n  Emitters.prototype.play = function () {\n    for (var _i = 0, _a = this.array; _i < _a.length; _i++) {\n      var emitter = _a[_i];\n      emitter.play();\n    }\n  };\n\n  Emitters.prototype.pause = function () {\n    for (var _i = 0, _a = this.array; _i < _a.length; _i++) {\n      var emitter = _a[_i];\n      emitter.pause();\n    }\n  };\n\n  Emitters.prototype.stop = function () {\n    this.array = [];\n  };\n\n  Emitters.prototype.handleClickMode = function (mode) {\n    var container = this.container;\n    var emitterOptions = this.emitters;\n    var modeEmitters = this.interactivityEmitters;\n\n    if (mode === Enums_1.EmitterClickMode.emitter) {\n      var emitterModeOptions = void 0;\n\n      if (modeEmitters instanceof Array) {\n        if (modeEmitters.length > 0) {\n          emitterModeOptions = Utils_1.Utils.itemFromArray(modeEmitters);\n        }\n      } else {\n        emitterModeOptions = modeEmitters;\n      }\n\n      var emittersOptions = emitterModeOptions !== null && emitterModeOptions !== void 0 ? emitterModeOptions : emitterOptions instanceof Array ? Utils_1.Utils.itemFromArray(emitterOptions) : emitterOptions;\n      var ePosition = container.interactivity.mouse.clickPosition;\n      var emitter = new EmitterInstance_1.EmitterInstance(this, Utils_1.Utils.deepExtend({}, emittersOptions), ePosition);\n      this.addEmitter(emitter);\n    }\n  };\n\n  Emitters.prototype.resize = function () {\n    for (var _i = 0, _a = this.array; _i < _a.length; _i++) {\n      var emitter = _a[_i];\n      emitter.resize();\n    }\n  };\n\n  Emitters.prototype.addEmitter = function (emitter) {\n    this.array.push(emitter);\n  };\n\n  Emitters.prototype.removeEmitter = function (emitter) {\n    var index = this.array.indexOf(emitter);\n\n    if (index >= 0) {\n      this.array.splice(index, 1);\n    }\n  };\n\n  return Emitters;\n}();\n\nexports.Emitters = Emitters;","map":null,"metadata":{},"sourceType":"script"}