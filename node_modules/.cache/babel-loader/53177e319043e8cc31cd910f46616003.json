{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Rectangle = void 0;\n\nvar Range_1 = require(\"./Range\");\n\nvar Rectangle = function (_super) {\n  __extends(Rectangle, _super);\n\n  function Rectangle(x, y, width, height) {\n    var _this = _super.call(this, x, y) || this;\n\n    _this.size = {\n      height: height,\n      width: width\n    };\n    return _this;\n  }\n\n  Rectangle.prototype.contains = function (point) {\n    return point.x >= this.position.x - this.size.width && point.x < this.position.x + this.size.width && point.y >= this.position.y - this.size.height && point.y < this.position.y + this.size.height;\n  };\n\n  Rectangle.prototype.intersects = function (range) {\n    var rect = range;\n    var circle = range;\n    var w = this.size.width;\n    var h = this.size.height;\n    var pos1 = this.position;\n    var pos2 = range.position;\n\n    if (circle.radius !== undefined) {\n      return circle.intersects(this);\n    } else if (rect.size !== undefined) {\n      var size2 = rect.size;\n      var w2 = size2.width;\n      var h2 = size2.height;\n      return pos2.x - w2 < pos1.x + w && pos2.x + w2 > pos1.x - w && pos2.y - h2 < pos1.y + h && pos2.y + h2 > pos1.y - h;\n    }\n\n    return false;\n  };\n\n  return Rectangle;\n}(Range_1.Range);\n\nexports.Rectangle = Rectangle;","map":null,"metadata":{},"sourceType":"script"}