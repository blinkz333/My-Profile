{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Utils = void 0;\n\nvar Enums_1 = require(\"../Enums\");\n\nvar ColorUtils_1 = require(\"./ColorUtils\");\n\nvar Utils = function () {\n  function Utils() {}\n\n  Utils.replaceColorSvg = function (image, color, opacity) {\n    if (!image.svgData) {\n      return \"\";\n    }\n\n    var svgXml = image.svgData;\n    var rgbHex = /#([0-9A-F]{3,6})/gi;\n    return svgXml.replace(rgbHex, function () {\n      return ColorUtils_1.ColorUtils.getStyleFromHsl(color, opacity);\n    });\n  };\n\n  Utils.clamp = function (num, min, max) {\n    return Math.min(Math.max(num, min), max);\n  };\n\n  Utils.isInArray = function (value, array) {\n    return value === array || array instanceof Array && array.indexOf(value) > -1;\n  };\n\n  Utils.mix = function (comp1, comp2, weight1, weight2) {\n    return Math.floor((comp1 * weight1 + comp2 * weight2) / (weight1 + weight2));\n  };\n\n  Utils.getParticleBaseVelocity = function (particle) {\n    var velocityBase;\n\n    switch (particle.direction) {\n      case Enums_1.MoveDirection.top:\n        velocityBase = {\n          x: 0,\n          y: -1\n        };\n        break;\n\n      case Enums_1.MoveDirection.topRight:\n        velocityBase = {\n          x: 0.5,\n          y: -0.5\n        };\n        break;\n\n      case Enums_1.MoveDirection.right:\n        velocityBase = {\n          x: 1,\n          y: -0\n        };\n        break;\n\n      case Enums_1.MoveDirection.bottomRight:\n        velocityBase = {\n          x: 0.5,\n          y: 0.5\n        };\n        break;\n\n      case Enums_1.MoveDirection.bottom:\n        velocityBase = {\n          x: 0,\n          y: 1\n        };\n        break;\n\n      case Enums_1.MoveDirection.bottomLeft:\n        velocityBase = {\n          x: -0.5,\n          y: 1\n        };\n        break;\n\n      case Enums_1.MoveDirection.left:\n        velocityBase = {\n          x: -1,\n          y: 0\n        };\n        break;\n\n      case Enums_1.MoveDirection.topLeft:\n        velocityBase = {\n          x: -0.5,\n          y: -0.5\n        };\n        break;\n\n      default:\n        velocityBase = {\n          x: 0,\n          y: 0\n        };\n        break;\n    }\n\n    return velocityBase;\n  };\n\n  Utils.getDistances = function (pointA, pointB) {\n    var dx = pointA.x - pointB.x;\n    var dy = pointA.y - pointB.y;\n    return {\n      dx: dx,\n      dy: dy,\n      distance: Math.sqrt(dx * dx + dy * dy)\n    };\n  };\n\n  Utils.getDistance = function (pointA, pointB) {\n    return this.getDistances(pointA, pointB).distance;\n  };\n\n  Utils.loadFont = function (character) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            _b.trys.push([0, 2,, 3]);\n\n            return [4, document.fonts.load(character.weight + \" 36px '\" + character.font + \"'\")];\n\n          case 1:\n            _b.sent();\n\n            return [3, 3];\n\n          case 2:\n            _a = _b.sent();\n            return [3, 3];\n\n          case 3:\n            return [2];\n        }\n      });\n    });\n  };\n\n  Utils.arrayRandomIndex = function (array) {\n    return Math.floor(Math.random() * array.length);\n  };\n\n  Utils.itemFromArray = function (array, index) {\n    return array[index !== undefined ? index : this.arrayRandomIndex(array)];\n  };\n\n  Utils.randomInRange = function (min, max) {\n    return Math.random() * (max - min) + min;\n  };\n\n  Utils.isPointInside = function (point, size, radius) {\n    return this.areBoundsInside(this.calculateBounds(point, radius !== null && radius !== void 0 ? radius : 0), size);\n  };\n\n  Utils.areBoundsInside = function (bounds, size) {\n    return bounds.left < size.width && bounds.right > 0 && bounds.top < size.height && bounds.bottom > 0;\n  };\n\n  Utils.calculateBounds = function (point, radius) {\n    return {\n      bottom: point.y + radius,\n      left: point.x - radius,\n      right: point.x + radius,\n      top: point.y - radius\n    };\n  };\n\n  Utils.loadImage = function (source) {\n    return new Promise(function (resolve, reject) {\n      var image = {\n        source: source,\n        type: source.substr(source.length - 3)\n      };\n\n      if (source) {\n        var img_1 = new Image();\n        img_1.addEventListener(\"load\", function () {\n          image.element = img_1;\n          resolve(image);\n        });\n        img_1.addEventListener(\"error\", function () {\n          reject(\"Error tsParticles - loading image: \" + source);\n        });\n        img_1.src = source;\n      } else {\n        reject(\"Error tsParticles - No image.src\");\n      }\n    });\n  };\n\n  Utils.downloadSvgImage = function (source) {\n    return __awaiter(this, void 0, void 0, function () {\n      var image, response, _a;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            if (!source) return [3, 5];\n            image = {\n              source: source,\n              type: source.substr(source.length - 3)\n            };\n\n            if (image.type !== \"svg\") {\n              return [2, this.loadImage(source)];\n            }\n\n            return [4, fetch(image.source)];\n\n          case 1:\n            response = _b.sent();\n            if (!response.ok) return [3, 3];\n            _a = image;\n            return [4, response.text()];\n\n          case 2:\n            _a.svgData = _b.sent();\n            return [2, image];\n\n          case 3:\n            throw new Error(\"Error tsParticles - Image not found\");\n\n          case 4:\n            return [3, 6];\n\n          case 5:\n            throw new Error(\"Error tsParticles - No image.src\");\n\n          case 6:\n            return [2];\n        }\n      });\n    });\n  };\n\n  Utils.deepExtend = function (destination) {\n    var _this = this;\n\n    var sources = [];\n\n    for (var _i = 1; _i < arguments.length; _i++) {\n      sources[_i - 1] = arguments[_i];\n    }\n\n    for (var _a = 0, sources_1 = sources; _a < sources_1.length; _a++) {\n      var source = sources_1[_a];\n\n      if (source === undefined || source === null) {\n        continue;\n      }\n\n      var typeOfSource = typeof source;\n\n      if (typeOfSource === \"object\") {\n        var sourceIsArray = Array.isArray(source);\n\n        if (sourceIsArray) {\n          if (typeof destination !== \"object\" || !destination || !Array.isArray(destination)) {\n            destination = [];\n          }\n        } else {\n          if (typeof destination !== \"object\" || !destination || Array.isArray(destination)) {\n            destination = {};\n          }\n        }\n\n        var _loop_1 = function (key) {\n          if (key === \"__proto__\") {\n            return \"continue\";\n          }\n\n          var value = source[key];\n          var isObject = typeof value === \"object\";\n          destination[key] = isObject && Array.isArray(value) ? value.map(function (v) {\n            return _this.deepExtend(destination[key], v);\n          }) : this_1.deepExtend(destination[key], value);\n        };\n\n        var this_1 = this;\n\n        for (var key in source) {\n          _loop_1(key);\n        }\n      } else {\n        destination = source;\n      }\n    }\n\n    return destination;\n  };\n\n  return Utils;\n}();\n\nexports.Utils = Utils;","map":null,"metadata":{},"sourceType":"script"}